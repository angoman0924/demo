<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zacx.serivce.dal.mapper.SymManagerwithfunctionMapper" >
  <resultMap id="BaseResultMap" type="com.zacx.serivce.dal.entity.SymManagerwithfunction" >
    <id column="Id" property="id" jdbcType="VARCHAR" />
    <result column="ManagerId" property="managerid" jdbcType="VARCHAR" />
    <result column="FunctionId" property="functionid" jdbcType="VARCHAR" />
    <result column="CreatedOn" property="createdon" jdbcType="TIMESTAMP" />
    <result column="CreatedBy" property="createdby" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    Id, ManagerId, FunctionId, CreatedOn, CreatedBy
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zacx.serivce.dal.entity.SymManagerwithfunctionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sym_managerwithfunction
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from sym_managerwithfunction
    where Id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from sym_managerwithfunction
    where Id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.zacx.serivce.dal.entity.SymManagerwithfunctionExample" >
    delete from sym_managerwithfunction
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zacx.serivce.dal.entity.SymManagerwithfunction" >
    <selectKey resultType="java.lang.String" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sym_managerwithfunction (ManagerId, FunctionId, CreatedOn, 
      CreatedBy)
    values (#{managerid,jdbcType=VARCHAR}, #{functionid,jdbcType=VARCHAR}, #{createdon,jdbcType=TIMESTAMP}, 
      #{createdby,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zacx.serivce.dal.entity.SymManagerwithfunction" >
    <selectKey resultType="java.lang.String" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sym_managerwithfunction
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="managerid != null" >
        ManagerId,
      </if>
      <if test="functionid != null" >
        FunctionId,
      </if>
      <if test="createdon != null" >
        CreatedOn,
      </if>
      <if test="createdby != null" >
        CreatedBy,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="managerid != null" >
        #{managerid,jdbcType=VARCHAR},
      </if>
      <if test="functionid != null" >
        #{functionid,jdbcType=VARCHAR},
      </if>
      <if test="createdon != null" >
        #{createdon,jdbcType=TIMESTAMP},
      </if>
      <if test="createdby != null" >
        #{createdby,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zacx.serivce.dal.entity.SymManagerwithfunctionExample" resultType="java.lang.Integer" >
    select count(*) from sym_managerwithfunction
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sym_managerwithfunction
    <set >
      <if test="record.id != null" >
        Id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.managerid != null" >
        ManagerId = #{record.managerid,jdbcType=VARCHAR},
      </if>
      <if test="record.functionid != null" >
        FunctionId = #{record.functionid,jdbcType=VARCHAR},
      </if>
      <if test="record.createdon != null" >
        CreatedOn = #{record.createdon,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdby != null" >
        CreatedBy = #{record.createdby,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sym_managerwithfunction
    set Id = #{record.id,jdbcType=VARCHAR},
      ManagerId = #{record.managerid,jdbcType=VARCHAR},
      FunctionId = #{record.functionid,jdbcType=VARCHAR},
      CreatedOn = #{record.createdon,jdbcType=TIMESTAMP},
      CreatedBy = #{record.createdby,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zacx.serivce.dal.entity.SymManagerwithfunction" >
    update sym_managerwithfunction
    <set >
      <if test="managerid != null" >
        ManagerId = #{managerid,jdbcType=VARCHAR},
      </if>
      <if test="functionid != null" >
        FunctionId = #{functionid,jdbcType=VARCHAR},
      </if>
      <if test="createdon != null" >
        CreatedOn = #{createdon,jdbcType=TIMESTAMP},
      </if>
      <if test="createdby != null" >
        CreatedBy = #{createdby,jdbcType=VARCHAR},
      </if>
    </set>
    where Id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zacx.serivce.dal.entity.SymManagerwithfunction" >
    update sym_managerwithfunction
    set ManagerId = #{managerid,jdbcType=VARCHAR},
      FunctionId = #{functionid,jdbcType=VARCHAR},
      CreatedOn = #{createdon,jdbcType=TIMESTAMP},
      CreatedBy = #{createdby,jdbcType=VARCHAR}
    where Id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>