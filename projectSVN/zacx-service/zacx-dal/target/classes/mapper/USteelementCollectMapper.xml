<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zacx.serivce.dal.mapper.USteelementCollectMapper" >
  <resultMap id="BaseResultMap" type="com.zacx.serivce.dal.entity.USteelementCollect" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="date_interval_type" property="dateIntervalType" jdbcType="INTEGER" />
    <result column="date_value" property="dateValue" jdbcType="VARCHAR" />
    <result column="money" property="money" jdbcType="DECIMAL" />
    <result column="settlement_time" property="settlementTime" jdbcType="TIMESTAMP" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="create_at" property="createAt" jdbcType="TIMESTAMP" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="modify_at" property="modifyAt" jdbcType="TIMESTAMP" />
    <result column="modify_by" property="modifyBy" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, `type`, date_interval_type, date_value, money, settlement_time, remark, 
    create_at, create_by, modify_at, modify_by
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zacx.serivce.dal.entity.USteelementCollectExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from u_steelement_collect
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from u_steelement_collect
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from u_steelement_collect
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zacx.serivce.dal.entity.USteelementCollectExample" >
    delete from u_steelement_collect
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zacx.serivce.dal.entity.USteelementCollect" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into u_steelement_collect (user_id, `type`, date_interval_type, 
      date_value, money, settlement_time, 
      remark, create_at, create_by, 
      modify_at, modify_by)
    values (#{userId,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{dateIntervalType,jdbcType=INTEGER}, 
      #{dateValue,jdbcType=VARCHAR}, #{money,jdbcType=DECIMAL}, #{settlementTime,jdbcType=TIMESTAMP}, 
      #{remark,jdbcType=VARCHAR}, #{createAt,jdbcType=TIMESTAMP}, #{createBy,jdbcType=VARCHAR}, 
      #{modifyAt,jdbcType=TIMESTAMP}, #{modifyBy,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zacx.serivce.dal.entity.USteelementCollect" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into u_steelement_collect
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="type != null" >
        `type`,
      </if>
      <if test="dateIntervalType != null" >
        date_interval_type,
      </if>
      <if test="dateValue != null" >
        date_value,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="settlementTime != null" >
        settlement_time,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="createAt != null" >
        create_at,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="modifyAt != null" >
        modify_at,
      </if>
      <if test="modifyBy != null" >
        modify_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="dateIntervalType != null" >
        #{dateIntervalType,jdbcType=INTEGER},
      </if>
      <if test="dateValue != null" >
        #{dateValue,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="settlementTime != null" >
        #{settlementTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null" >
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="modifyAt != null" >
        #{modifyAt,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyBy != null" >
        #{modifyBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zacx.serivce.dal.entity.USteelementCollectExample" resultType="java.lang.Integer" >
    select count(*) from u_steelement_collect
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update u_steelement_collect
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        `type` = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.dateIntervalType != null" >
        date_interval_type = #{record.dateIntervalType,jdbcType=INTEGER},
      </if>
      <if test="record.dateValue != null" >
        date_value = #{record.dateValue,jdbcType=VARCHAR},
      </if>
      <if test="record.money != null" >
        money = #{record.money,jdbcType=DECIMAL},
      </if>
      <if test="record.settlementTime != null" >
        settlement_time = #{record.settlementTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createAt != null" >
        create_at = #{record.createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createBy != null" >
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyAt != null" >
        modify_at = #{record.modifyAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyBy != null" >
        modify_by = #{record.modifyBy,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update u_steelement_collect
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      `type` = #{record.type,jdbcType=INTEGER},
      date_interval_type = #{record.dateIntervalType,jdbcType=INTEGER},
      date_value = #{record.dateValue,jdbcType=VARCHAR},
      money = #{record.money,jdbcType=DECIMAL},
      settlement_time = #{record.settlementTime,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_at = #{record.createAt,jdbcType=TIMESTAMP},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      modify_at = #{record.modifyAt,jdbcType=TIMESTAMP},
      modify_by = #{record.modifyBy,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zacx.serivce.dal.entity.USteelementCollect" >
    update u_steelement_collect
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        `type` = #{type,jdbcType=INTEGER},
      </if>
      <if test="dateIntervalType != null" >
        date_interval_type = #{dateIntervalType,jdbcType=INTEGER},
      </if>
      <if test="dateValue != null" >
        date_value = #{dateValue,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=DECIMAL},
      </if>
      <if test="settlementTime != null" >
        settlement_time = #{settlementTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null" >
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="modifyAt != null" >
        modify_at = #{modifyAt,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyBy != null" >
        modify_by = #{modifyBy,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zacx.serivce.dal.entity.USteelementCollect" >
    update u_steelement_collect
    set user_id = #{userId,jdbcType=INTEGER},
      `type` = #{type,jdbcType=INTEGER},
      date_interval_type = #{dateIntervalType,jdbcType=INTEGER},
      date_value = #{dateValue,jdbcType=VARCHAR},
      money = #{money,jdbcType=DECIMAL},
      settlement_time = #{settlementTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      create_at = #{createAt,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=VARCHAR},
      modify_at = #{modifyAt,jdbcType=TIMESTAMP},
      modify_by = #{modifyBy,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>