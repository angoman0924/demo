package com.zacx.gateway.passenger.controller;

import com.zacx.core.annotation.MethodFlag;
import com.zacx.core.enums.Code;
import com.zacx.gateway.base.base.Result;

import com.zacx.gateway.passenger.constants.PassengerApiUrl;
import com.zacx.serivce.user.api.PassengerServiceApi;
import com.zacx.serivce.user.api.dto.PassengerDTO;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import java.util.List;

/**
* @author gulx
* @Description 乘客管理
* @Date  2018/9/28 10:50
* @Param 
* @copyright 上海拜米网络科技有限公司
* @return 
**/
@Api(description = "乘客")
@RestController
@RequestMapping(PassengerApiUrl.PASSENGER)
public class PassengerController {

    @Autowired
    private PassengerServiceApi passengerService;

    @MethodFlag
    @ApiOperation(value = "新增乘客信息")
    @PostMapping(PassengerApiUrl.INSERT_PASSENGER)
    public Result<String> insertPassenger(@RequestBody PassengerDTO passenger) {
        Integer result = passengerService.insert(passenger);
        if(result > 0){
            return Result.success();
        }else{
            return Result.error(Code.ERROR_DB_OPERATE,"修改乘客信息失败");
        }
    }

    @MethodFlag
    @ApiOperation(value = "修改乘客信息")
    @PutMapping(PassengerApiUrl.UPDATE_MOBILE)
    public Result<String> updatePassenger(@RequestBody PassengerDTO passenger) {
        if (passenger.getMobile().length() != 11) {
            return Result.error(Code.ERROR_ARGUMENT,"电话号码格式不正确");
        }
        if( passenger.getId() == null){
            return Result.error(Code.ERROR_ARGUMENT,"乘客编号不能为空");
        }
        Integer result = passengerService.updateByPrimaryKeySelective(passenger);
        if(result > 0){
            return Result.success();
        }else{
            return Result.error(Code.ERROR_DB_OPERATE,"修改乘客信息失败");
        }
    }

    @MethodFlag
    @ApiOperation(value = "删除乘客信息")
    @DeleteMapping(PassengerApiUrl.DEL_PASSENGER)
    public Result<String> deletePassenger(@ApiParam("乘客ID") @PathVariable("passengerId") int passengerId) {
        Integer result = passengerService.deleteByPrimaryKey(passengerId);
        if(result > 0){
            return Result.success();
        }else{
            return Result.error(Code.ERROR_DB_OPERATE,"修改乘客信息失败");
        }
    }

    @MethodFlag
    @ApiOperation(value = "根据用户编号查询关联乘客信息")
    @GetMapping(PassengerApiUrl.USER_PASSENGERS)
    public Result<List<PassengerDTO>> passengers(@ApiParam("用户ID") @PathVariable("userId") Integer userId){
        if( userId == 0 ){
            return  Result.error(Code.ERROR_ARGUMENT,"用户编号不能为空！");
        }
        List<PassengerDTO> passengerList = passengerService.selectUserById(userId);
        if(passengerList ==  null){
            return Result.error(Code.ERROR_DATA_NOT_FOUND,"您还未添加乘客~");
        }else {
            return Result.success(passengerList);
        }
    }




}
