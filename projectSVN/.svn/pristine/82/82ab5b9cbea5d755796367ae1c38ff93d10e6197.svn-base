package com.zacx.serivce.line.service.impl;

import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;
import com.zacx.serivce.dal.entity.LSite;
import com.zacx.serivce.dal.entity.LSiteExample;
import com.zacx.serivce.dal.mapper.LSiteMapper;
import com.zacx.serivce.line.api.exceptions.LineServiceException;
import com.zacx.serivce.line.service.SiteService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.Date;
import java.util.List;

/**
 * 站点内部服务
 * Created by song on 2018/10/3.
 */
@Service
public class SiteServiceImpl implements SiteService {
    @Autowired
    private LSiteMapper siteMapper;
    @Override
    public int insert(LSite record) throws LineServiceException {
        return siteMapper.insertSelective(record);
    }

    @Override
    public int update(LSite record) throws LineServiceException {
        return siteMapper.updateByPrimaryKeySelective(record);
    }

    @Override
    public int removeListByIds(List<Integer> ids,String userCode) throws LineServiceException {
        LSiteExample example=new LSiteExample();
        example.createCriteria().andIdIn(ids);
        LSite record =new LSite();
        record.setIsDelete(true);
        record.setModifyBy(userCode);
        record.setModifyAt(new Date());
        return siteMapper.updateByExampleSelective(record,example);
    }

    @Override
    public PageInfo<LSite> getSitePageInfo(LSite record,int pageIndex,int pageSize) {
        PageHelper.startPage(pageIndex,pageSize);
        List<LSite> lSites = siteMapper.selectByExample(this.params2example(record));
        PageInfo<LSite> page=new PageInfo<>(lSites);
        return page;
    }

    private LSiteExample params2example(LSite record){
        LSiteExample example=new LSiteExample();
        LSiteExample.Criteria criteria = example.createCriteria();
        if(null!=record.getId()){
            criteria.andIdEqualTo(record.getId());
        }
        if(null!=record.getAddress()&&!"".equals(record.getAddress().trim())){
            criteria.andAddressLike(record.getAddress().trim());
        }
        if(null!=record.getCityCode()&&!"".equals(record.getCityCode().trim())){
            criteria.andCityCodeEqualTo(record.getCityCode().trim());
        }
        if(null!=record.getCreateBy()&&!"".equals(record.getCreateBy().trim())){
            criteria.andCreateByEqualTo(record.getCreateBy().trim());
        }
        if(null!=record.getCountyCode()&&!"".equals(record.getCountyCode().trim())){
            criteria.andCountyCodeEqualTo(record.getCountyCode().trim());
        }
        if(null!=record.getIsDelete()){
            criteria.andIsDeleteEqualTo(record.getIsDelete());
        }
        if(null!=record.getName()&&!"".equals(record.getName().trim())){
            criteria.andNameLike(record.getName().trim());
        }
        if(null!=record.getPlaceCode()&&!"".equals(record.getPlaceCode().trim())){
            criteria.andPlaceCodeEqualTo(record.getPlaceCode().trim());
        }
        if(null!=record.getProvinceCode()&&!"".equals(record.getProvinceCode().trim())){
            criteria.andProvinceCodeEqualTo(record.getProvinceCode().trim());
        }
        if(null!=record.getModifyBy()&&!"".equals(record.getModifyBy().trim())){
            criteria.andModifyByEqualTo(record.getModifyBy());
        }
        return example;
    }
}
