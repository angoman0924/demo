package com.zacx.gateway.passenger.controller;

import com.zacx.core.enums.Code;
import com.zacx.core.model.base.Result;

import com.zacx.gateway.passenger.constants.PassengerApiUrl;
import com.zacx.serivce.user.api.PassengerServiceApi;
import com.zacx.serivce.user.api.dto.PassengerDTO;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

/**
* @author gulx
* @Description 乘客管理
* @Date  2018/9/28 10:50
* @Param 
* @copyright 上海拜米网络科技有限公司
* @return 
**/
@Api(description = "乘客")
@RestController
@RequestMapping(PassengerApiUrl.PASSENGER)
public class PassengerController {

    @Autowired
    private PassengerServiceApi passengerService;

    @ApiOperation(value = "新增乘客信息")
    @PostMapping(PassengerApiUrl.EMPTY)
    public Result<PassengerDTO> insertPassenger(@RequestBody PassengerDTO passenger) {
        Integer resultl = passengerService.insert(passenger);
        if(resultl > 0){
            return Result.success();
        }else{
            return Result.error(Code.ERROR_DB_OPERATE,"新增乘客信息失败");
        }
    }

    @ApiOperation(value = "修改乘客信息")
    @PutMapping(PassengerApiUrl.EMPTY)
    public Result<Void> updatePassenger(@RequestBody PassengerDTO passenger) {
        Integer resultl = passengerService.updateByPrimaryKeySelective(passenger);
        if(resultl > 0){
            return Result.success();
        }else{
            return Result.error(Code.ERROR_DB_OPERATE,"修改乘客信息失败");
        }
    }

    @ApiOperation(value = "删除乘客信息")
    @DeleteMapping(PassengerApiUrl.ID)
    public Result<Void> deletePassenger(@ApiParam("乘客ID") @PathVariable("id") int passengerId) {
        Integer result = passengerService.deleteByPrimaryKey(passengerId);
        if(result > 0){
            return Result.success();
        }else{
            return Result.error(Code.ERROR_DB_OPERATE,"删除乘客信息失败");
        }
    }



}
