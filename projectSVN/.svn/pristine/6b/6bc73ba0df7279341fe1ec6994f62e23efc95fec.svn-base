package com.zacx.gateway.passenger.controller;

import com.zacx.gateway.base.base.PageResult;
import com.zacx.gateway.base.base.Result;
import com.zacx.gateway.base.base.ClientInfo;
import com.zacx.gateway.passenger.constants.OrderApiUrl;
import com.zacx.gateway.passenger.dto.order.*;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;


/**
* @author gulx
* @Description 订单
* @Date  2018/9/27 19:37
* @Param
* @copyright 上海拜米网络科技有限公司
* @return
**/
@Api(description = "订单模块")
@RestController
@RequestMapping(OrderApiUrl.V1_ORDER)
public class OrderController {

    @ApiOperation(value = "计算班次订单金额")
    @PostMapping(OrderApiUrl.COMP_PLAN_ORDER_PRICE)
    public Result<AddCreatePriceResult> compPlanOrderPrice(ClientInfo clientInfo, @RequestBody AddPlanOrderPriceEnter addPlanOrderPriceEnter){
        //TODO ... 逻辑代码
        AddCreatePriceResult result=new AddCreatePriceResult();
        return Result.success(result);
    }

    @ApiOperation(value = "计算包车订单金额")
    @PostMapping(OrderApiUrl.COMP_CHARTERED_ORDER_PRICE)
    public Result<AddCreatePriceResult> compCharteredOrderPrice(ClientInfo clientInfo, @RequestBody AddCharteredOrderPriceEnter addCharteredOrderPriceEnter){
        //TODO ... 逻辑代码
        AddCreatePriceResult result=new AddCreatePriceResult();
        return Result.success(result);
    }

    @ApiOperation(value = "新增班次订单")
    @PostMapping(OrderApiUrl.ADD_PLAN_ORDER)
    public Result<AddOrderResult> addPlanOrder(ClientInfo clientInfo, @RequestBody AddPlanOrderEnter addPlanOrderEnter){
        //TODO ... 逻辑代码
        AddOrderResult result=new AddOrderResult();
        return Result.success(result);
    }

    @ApiOperation(value = "新增包车订单")
    @PostMapping(OrderApiUrl.ADD_CHARTERED_ORDER)
    public Result<AddOrderResult> addCharteredOrder(ClientInfo clientInfo, @RequestBody AddCharteredOrderEnter addCharteredOrderEnter){
        //TODO ... 逻辑代码
        AddOrderResult result=new AddOrderResult();
        return Result.success(result);
    }

    @ApiOperation(value = "订单支付金额详细")
    @PostMapping(OrderApiUrl.PAY_DETAIL)
    public Result<PayPriceBaseResult> payDetail(ClientInfo clientInfo, @RequestBody PayPriceApplyEnter orderPaymentEnter){
        //TODO ... 逻辑代码
        PayPriceDetailResult result=new PayPriceDetailResult();
        return Result.success(result);
    }

    @ApiOperation(value = "支付订单")
    @PostMapping(OrderApiUrl.DO_PAY)
    public Result<PayConfirmEnter> doPay(ClientInfo clientInfo, @RequestBody PayConfirmEnter payConfirmEnter){
        //TODO ... 逻辑代码
        PayConfirmEnter result=new PayConfirmEnter();
        return Result.success(result);
    }

    @ApiOperation(value = "取消或更改订单金额")
    @PostMapping(OrderApiUrl.CHANGE_DETAIL)
    public Result<PayPriceBaseResult> changePrice(ClientInfo clientInfo, @RequestBody ChangeOrderEnter changeOrderEnter){
        //TODO ... 逻辑代码
        PayPriceReturnResult result=new PayPriceReturnResult();
        return Result.success(result);
    }

    @ApiOperation(value = "取消或更改订单")
    @PostMapping(OrderApiUrl.DO_CHANGE)
    public Result<ChangeOrderResult> doChange(ClientInfo clientInfo, @RequestBody ChangeOrderEnter changeOrderEnter){
        //TODO ... 逻辑代码
        ChangeOrderResult result=new ChangeOrderResult();
        return Result.success(result);
    }

    @ApiOperation(value = "订单列表")
    @PostMapping(OrderApiUrl.ORDER_LIST)
    public Result<PageResult<OrderMainResult>> queryOrderList(ClientInfo clientInfo, @RequestBody OrderQueryEnter orderQueryEnter){
        //TODO ... 逻辑代码
        PageResult<OrderMainResult> result=new PageResult<>();
        return Result.success(result);
    }

    @ApiOperation(value = "订单详情")
    @PostMapping(OrderApiUrl.ORDER_DETAIL)
    public Result<OrderDetailResult> queryOrderDetail(ClientInfo clientInfo, @RequestBody OrderDetailEnter orderDetailEnter){
        //TODO ... 逻辑代码
        OrderDetailResult result=new OrderDetailResult();
        return Result.success(result);
    }

    @ApiOperation(value = "扫码上车")
    @PostMapping(OrderApiUrl.SCAN_BOARDING_CODE)
    public Result<BoardingValiResult> scanBoardingCode(ClientInfo clientInfo, @RequestBody BoardingValiEnter boardingValiEnter){
        //TODO ... 逻辑代码
        BoardingValiResult result=new BoardingValiResult();
        return Result.success(result);
    }

    @ApiOperation(value = "生成登车短信码")
    @PostMapping(OrderApiUrl.SMS_BOARDING_CODE)
    public Result<BoardingCodeResult> smsBoardingCode(ClientInfo clientInfo, @RequestBody BoardingValiEnter boardingValiEnter){
        //TODO ... 逻辑代码
        BoardingCodeResult result=new BoardingCodeResult();
        return Result.success(result);
    }

    @ApiOperation(value = "获取评论类型集合")
    @PostMapping(OrderApiUrl.EVALUATE_CATEGORIES)
    public Result<EvaluateCategoryResult> evaluateCategory(ClientInfo clientInfo){
        //TODO ... 逻辑代码
        EvaluateCategoryResult result=new EvaluateCategoryResult();
        return Result.success(result);
    }

    @ApiOperation(value = "提交评价信息")
    @PostMapping(OrderApiUrl.DO_EVALUATE)
    public Result<EvaluateResult> doEvaluate(ClientInfo clientInfo, @RequestBody EvaluateEnter evaluateEnter){
        //TODO ... 逻辑代码 大类只存前3条，标签存name的JSON集合
        EvaluateResult result=new EvaluateResult();
        return Result.success(result);
    }

}
