package com.zacx.serivce.line.api.impl;

import com.alibaba.fastjson.JSON;
import com.github.pagehelper.PageInfo;
import com.zacx.serivce.dal.entity.LSite;
import com.zacx.serivce.line.api.SiteServiceApi;
import com.zacx.serivce.line.api.dto.SiteDTO;
import com.zacx.serivce.line.api.exceptions.LineServiceException;
import com.zacx.serivce.line.service.SiteService;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.ArrayList;
import java.util.List;

/**
 * 站点服务api
 * Created by song on 2018/10/3.
 */
@Service
public class SiteServiceApiImpl implements SiteServiceApi {

    Logger logger=LoggerFactory.getLogger(SiteServiceApiImpl.class);
    @Autowired
    private SiteService siteService;

    @Override
    public int insert(SiteDTO dto) throws LineServiceException {
        logger.info("SiteServiceApi.insert,params:{}", JSON.toJSONString(dto));
        LSite record=new LSite();
        BeanUtils.copyProperties(dto,record);
        int r = siteService.insert(record);
        logger.info("r={}",r);
        return r;
    }

    @Override
    public int update(SiteDTO dto) throws LineServiceException {
        logger.info("SiteServiceApi.update,params:{}", JSON.toJSONString(dto));
        LSite record=new LSite();
        BeanUtils.copyProperties(dto,record);
        int r = siteService.update(record);
        logger.info("r={}",r);
        return r;
    }

    @Override
    public int removeListByIds(List<Integer> ids, String userCode) throws LineServiceException {
        logger.info("SiteServiceApi.removeListByIds,params:{}", JSON.toJSONString(ids));
        int r = siteService.removeListByIds(ids,userCode);
        logger.info("r={}",r);
        return r;
    }

    @Override
    public PageInfo<SiteDTO> getSitePageInfo(SiteDTO dto) {
        logger.info("SiteServiceApi.getSitePageInfo,params:{}",JSON.toJSONString(dto));

        PageInfo<LSite> pageInfo = siteService.getSitePageInfo(dto);
        logger.info("pageInfo_result:{}",JSON.toJSONString(pageInfo));

        PageInfo<SiteDTO> page=new PageInfo<>();
        if(null!=pageInfo&&null!=pageInfo.getList()&&!pageInfo.getList().isEmpty()){
            BeanUtils.copyProperties(pageInfo,page);
            List<SiteDTO> list=new ArrayList<>();
            pageInfo.getList().forEach(e->{
                SiteDTO temp=new SiteDTO();
                BeanUtils.copyProperties(e,temp);
                list.add(temp);
            });
            page.setList(list);
        }
        logger.info("page_result:{}",JSON.toJSONString(page));

        return page;
    }
}
